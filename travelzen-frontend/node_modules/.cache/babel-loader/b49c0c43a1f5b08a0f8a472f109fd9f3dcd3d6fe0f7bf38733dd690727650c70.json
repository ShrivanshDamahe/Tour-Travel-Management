{"ast":null,"code":"var _jsxFileName = \"E:\\\\1 Project TravelZen -G91\\\\travelzen-frontend\\\\travelzen-frontend\\\\src\\\\UserComponent\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:8080/api/auth/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      const result = await response.text();\n      toast.success(result);\n\n      // Display success message and redirect to login after a delay\n      setTimeout(() => {\n        navigate(\"/user/login\");\n      }, 2000); // Redirect after 2 seconds\n    } catch (error) {\n      toast.error(\"Failed to reset password. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card form-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-center mb-4\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newPassword\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"newPassword\",\n                  value: newPassword,\n                  onChange: e => setNewPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn bg-color text-white w-100 mt-3\",\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"QwXCbNLWxft34iwyj0ihNJkY0Co=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","toast","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","searchParams","token","get","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","text","success","setTimeout","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/1 Project TravelZen -G91/travelzen-frontend/travelzen-frontend/src/UserComponent/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/auth/reset-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      });\r\n\r\n      const result = await response.text();\r\n      toast.success(result);\r\n\r\n      // Display success message and redirect to login after a delay\r\n      setTimeout(() => {\r\n        navigate(\"/user/login\");\r\n      }, 2000); // Redirect after 2 seconds\r\n    } catch (error) {\r\n      toast.error(\"Failed to reset password. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card form-card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title text-center mb-4\">Reset Password</h2>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"newPassword\">New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"newPassword\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn bg-color text-white w-100 mt-3\">\r\n                  Reset Password\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}