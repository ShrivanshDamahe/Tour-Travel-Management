{"ast":null,"code":"var _jsxFileName = \"E:\\\\1 Project TravelZen -G91\\\\tours-and-travels-frontend-master\\\\tours-and-travels-frontend-master\\\\src\\\\PageComponent\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import Carousel from \"./Carousel\";\n// // import Footer from \"../NavbarComponent/Footer\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import TourCard from \"../TourComponent/TourCard\";\n\n// // const HomePage = () => {\n// //   const navigate = useNavigate();\n// //   const [locations, setLocations] = useState([]);\n\n// //   const [eventName, setEventName] = useState(\"\");\n// //   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n// //   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n\n// //   const [tempEventName, setTempEventName] = useState(\"\");\n// //   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n// //   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n// //   const [tours, setTours] = useState([]);\n\n// //   const retrieveAllLocations = async () => {\n// //     const response = await axios.get(\n// //       \"http://localhost:8080/api/location/fetch/all\"\n// //     );\n// //     return response.data;\n// //   };\n\n// //   useEffect(() => {\n// //     const getAllEvents = async () => {\n// //       const allEvents = await retrieveAllEvents();\n// //       if (allEvents) {\n// //         setTours(allEvents.tours);\n// //       }\n// //     };\n\n// //     const getSearchedEvents = async () => {\n// //       const allEvents = await searchEvents();\n// //       if (allEvents) {\n// //         setTours(allEvents.tours);\n// //       }\n// //     };\n\n// //     const getAllLocations = async () => {\n// //       const resLocation = await retrieveAllLocations();\n// //       if (resLocation) {\n// //         setLocations(resLocation.locations);\n// //       }\n// //     };\n\n// //     if (\n// //       eventFromLocationId !== \"\" ||\n// //       eventToLocationId !== \"\" ||\n// //       eventName !== \"\"\n// //     ) {\n// //       getSearchedEvents();\n// //     } else {\n// //       getAllEvents();\n// //     }\n\n// //     getAllLocations();\n// //   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n// //   const retrieveAllEvents = async () => {\n// //     const response = await axios.get(\n// //       \"http://localhost:8080/api/tour/fetch/all/active\"\n// //     );\n// //     return response.data;\n// //   };\n\n// //   const searchEvents = async () => {\n// //     if (eventName !== \"\") {\n// //       const response = await axios.get(\n// //         \"http://localhost:8080/api/tour/fetch/name-wise?tourName=\" + eventName\n// //       );\n\n// //       return response.data;\n// //     } else if (\n// //       eventFromLocationId !== \"\" ||\n// //       eventFromLocationId !== \"0\" ||\n// //       eventToLocationId !== \"\" ||\n// //       eventToLocationId !== \"0\"\n// //     ) {\n// //       const response = await axios.get(\n// //         \"http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=\" +\n// //           eventFromLocationId +\n// //           \"&toLocationId=\" +\n// //           eventToLocationId\n// //       );\n// //       return response.data;\n// //     }\n// //   };\n\n// //   const searchEventByName = (e) => {\n// //     e.preventDefault();\n// //     setEventName(tempEventName);\n\n// //     setTempEventName(\"\");\n// //     setEventFromLocationId(\"\");\n// //     setEventToLocationId(\"\");\n// //   };\n\n// //   const searchEventByCategory = (e) => {\n// //     e.preventDefault();\n// //     setEventFromLocationId(tempEventFromLocationId);\n// //     setEventToLocationId(tempEventToLocationId);\n// //     setTempEventFromLocationId(\"\");\n// //     setTempEventToLocationId(\"\");\n// //     setEventName(\"\");\n// //   };\n\n// //   return (\n// //     <div className=\"container-fluid mb-2\">\n// //       <Carousel />\n// //       <h5 className=\"text-color-second text-center mt-3\">\n// //         Search Tours here..!!\n// //       </h5>\n\n// //       <div className=\"d-flex aligns-items-center justify-content-center\">\n// //         <div className=\"row\">\n// //           <div className=\"col-auto\">\n// //             <div className=\"mt-3\">\n// //               <form class=\"row g-3\">\n// //                 <div class=\"col-auto\">\n// //                   <input\n// //                     type=\"text\"\n// //                     className=\"form-control\"\n// //                     id=\"city\"\n// //                     name=\"eventName\"\n// //                     onChange={(e) => setTempEventName(e.target.value)}\n// //                     value={tempEventName}\n// //                     placeholder=\"Search Tour here...\"\n// //                   />\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <button\n// //                     type=\"submit\"\n// //                     class=\"btn bg-color custom-bg-text mb-3\"\n// //                     onClick={searchEventByName}\n// //                   >\n// //                     Search\n// //                   </button>\n// //                 </div>\n// //               </form>\n// //             </div>\n// //           </div>\n// //           <div className=\"col\">\n// //             <div className=\"mt-3\">\n// //               <form class=\"row g-3\">\n// //                 <div class=\"col-auto\">\n// //                   <select\n// //                     name=\"tempEventFromLocationId\"\n// //                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n// //                     className=\"form-control\"\n// //                     required\n// //                   >\n// //                     <option value=\"\">From Tour Location</option>\n\n// //                     {locations.map((location) => {\n// //                       return (\n// //                         <option value={location.id}> {location.name} </option>\n// //                       );\n// //                     })}\n// //                   </select>\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <select\n// //                     name=\"tempEventToLocationId\"\n// //                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n// //                     className=\"form-control\"\n// //                     required\n// //                   >\n// //                     <option value=\"\">To Tour Location</option>\n\n// //                     {locations.map((location) => {\n// //                       return (\n// //                         <option value={location.id}> {location.name} </option>\n// //                       );\n// //                     })}\n// //                   </select>\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <button\n// //                     type=\"submit\"\n// //                     class=\"btn bg-color custom-bg-text mb-3\"\n// //                     onClick={searchEventByCategory}\n// //                   >\n// //                     Search\n// //                   </button>\n// //                 </div>\n// //               </form>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       <div className=\"col-md-12 mt-3 mb-5\">\n// //         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n// //           {tours.map((tour) => {\n// //             return <TourCard item={tour} key={tour.id} />;\n// //           })}\n// //         </div>\n// //       </div>\n// //       <hr />\n// //       <Footer />\n// //     </div>\n// //   );\n// // };\n\n// // export default HomePage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import TourCard from \"../TourComponent/TourCard\";\n// import \"./homePage.css\"; // Import the CSS file\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n//   const [tours, setTours] = useState([]);\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\"http://localhost:8080/api/location/fetch/all\");\n//     return response.data;\n//   };\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\"http://localhost:8080/api/tour/fetch/all/active\");\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`\n//       );\n//       return response.data;\n//     } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (eventFromLocationId !== \"\" || eventToLocationId !== \"\" || eventName !== \"\") {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"home-page\">\n//       <Carousel />\n\n//       <div className=\"search-section\">\n//         <h2 className=\"search-title\">Search Tours Here..!!</h2>\n//         <div className=\"search-container\">\n//           <form className=\"search-form\" onSubmit={searchEventByName}>\n//             <input\n//               type=\"text\"\n//               className=\"search-input\"\n//               placeholder=\"Search Tour by Name...\"\n//               value={tempEventName}\n//               onChange={(e) => setTempEventName(e.target.value)}\n//             />\n//             <button type=\"submit\" className=\"search-button\">\n//               Search\n//             </button>\n//           </form>\n\n//           <form className=\"search-form\" onSubmit={searchEventByCategory}>\n//             <select\n//               className=\"search-select\"\n//               value={tempEventFromLocationId}\n//               onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//             >\n//               <option value=\"\">From Location</option>\n//               {locations.map((location) => (\n//                 <option key={location.id} value={location.id}>\n//                   {location.name}\n//                 </option>\n//               ))}\n//             </select>\n\n//             <select\n//               className=\"search-select\"\n//               value={tempEventToLocationId}\n//               onChange={(e) => setTempEventToLocationId(e.target.value)}\n//             >\n//               <option value=\"\">To Location</option>\n//               {locations.map((location) => (\n//                 <option key={location.id} value={location.id}>\n//                   {location.name}\n//                 </option>\n//               ))}\n//             </select>\n\n//             <button type=\"submit\" className=\"search-button\">\n//               Search\n//             </button>\n//           </form>\n//         </div>\n//       </div>\n\n//       <div className=\"tours-section\">\n//         <h2 className=\"tours-title\">Featured Tours</h2>\n//         <div className=\"tours-grid\">\n//           {tours.map((tour) => (\n//             <TourCard key={tour.id} item={tour} />\n//           ))}\n//         </div>\n//       </div>\n\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import { useNavigate } from \"react-router-dom\";\n// import TourCard from \"../TourComponent/TourCard\";\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n//   const [tours, setTours] = useState([]);\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/location/fetch/all\"\n//     );\n//     return response.data;\n//   };\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/tour/fetch/all/active\"\n//     );\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`\n//       );\n//       return response.data;\n//     } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (\n//       eventFromLocationId !== \"\" ||\n//       eventToLocationId !== \"\" ||\n//       eventName !== \"\"\n//     ) {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"container-fluid mb-2\">\n//       <Carousel />\n//       <h5 className=\"text-color-second text-center mt-3\">\n//         Search Tours here..!!\n//       </h5>\n\n//       <div className=\"d-flex aligns-items-center justify-content-center\">\n//         <div className=\"row\">\n//           <div className=\"col-auto\">\n//             <div className=\"mt-3\">\n//               <form className=\"row g-3\">\n//                 <div className=\"col-auto\">\n//                   <input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     id=\"city\"\n//                     name=\"eventName\"\n//                     onChange={(e) => setTempEventName(e.target.value)}\n//                     value={tempEventName}\n//                     placeholder=\"Search Tour here...\"\n//                   />\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByName}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//           <div className=\"col\">\n//             <div className=\"mt-3\">\n//               <form className=\"row g-3\">\n//                 <div className=\"col-auto\">\n//                   <select\n//                     name=\"tempEventFromLocationId\"\n//                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">From Tour Location</option>\n//                     {locations.map((location) => (\n//                       <option key={location.id} value={location.id}>\n//                         {location.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <select\n//                     name=\"tempEventToLocationId\"\n//                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">To Tour Location</option>\n//                     {locations.map((location) => (\n//                       <option key={location.id} value={location.id}>\n//                         {location.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByCategory}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"col-md-12 mt-3 mb-5\">\n//         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n//           {tours.map((tour) => (\n//             <TourCard key={tour.id} item={tour} />\n//           ))}\n//         </div>\n//       </div>\n//       <hr />\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Carousel from \"./Carousel\";\nimport Footer from \"../NavbarComponent/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport TourCard from \"../TourComponent/TourCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [tours, setTours] = useState([]);\n  const [eventName, setEventName] = useState(\"\");\n  const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n  const [eventToLocationId, setEventToLocationId] = useState(\"\");\n  const [tempEventName, setTempEventName] = useState(\"\");\n  const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n  const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n  const retrieveAllLocations = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/location/fetch/all\");\n    return response.data;\n  };\n  const retrieveAllEvents = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/tour/fetch/all/active\");\n    return response.data;\n  };\n  const searchEvents = async () => {\n    if (eventName !== \"\") {\n      const response = await axios.get(`http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`);\n      return response.data;\n    } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n      const response = await axios.get(`http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`);\n      return response.data;\n    }\n  };\n  useEffect(() => {\n    const getAllEvents = async () => {\n      const allEvents = await retrieveAllEvents();\n      if (allEvents) {\n        setTours(allEvents.tours);\n      }\n    };\n    const getSearchedEvents = async () => {\n      const allEvents = await searchEvents();\n      if (allEvents) {\n        setTours(allEvents.tours);\n      }\n    };\n    const getAllLocations = async () => {\n      const resLocation = await retrieveAllLocations();\n      if (resLocation) {\n        setLocations(resLocation.locations);\n      }\n    };\n    if (eventFromLocationId !== \"\" || eventToLocationId !== \"\" || eventName !== \"\") {\n      getSearchedEvents();\n    } else {\n      getAllEvents();\n    }\n    getAllLocations();\n  }, [eventFromLocationId, eventToLocationId, eventName, searchEvents]); // Added searchEvents to dependencies\n\n  const searchEventByName = e => {\n    e.preventDefault();\n    setEventName(tempEventName);\n    setTempEventName(\"\");\n    setEventFromLocationId(\"\");\n    setEventToLocationId(\"\");\n  };\n  const searchEventByCategory = e => {\n    e.preventDefault();\n    setEventFromLocationId(tempEventFromLocationId);\n    setEventToLocationId(tempEventToLocationId);\n    setTempEventFromLocationId(\"\");\n    setTempEventToLocationId(\"\");\n    setEventName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-color-second text-center mt-3\",\n      children: \"Search Tours here..!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex aligns-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"row g-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"city\",\n                  name: \"eventName\",\n                  onChange: e => setTempEventName(e.target.value),\n                  value: tempEventName,\n                  placeholder: \"Search Tour here...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn bg-color custom-bg-text mb-3\",\n                  onClick: searchEventByName,\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"row g-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"tempEventFromLocationId\",\n                  onChange: e => setTempEventFromLocationId(e.target.value),\n                  className: \"form-control\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"From Tour Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 21\n                  }, this), locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: location.id,\n                    children: location.name\n                  }, location.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"tempEventToLocationId\",\n                  onChange: e => setTempEventToLocationId(e.target.value),\n                  className: \"form-control\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"To Tour Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 21\n                  }, this), locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: location.id,\n                    children: location.name\n                  }, location.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn bg-color custom-bg-text mb-3\",\n                  onClick: searchEventByCategory,\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-3 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-2 g-4\",\n        children: tours.map(tour => /*#__PURE__*/_jsxDEV(TourCard, {\n          item: tour\n        }, tour.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 675,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"yTsTEZrPrjJ5ALcLtF//oVUHDuA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Carousel","Footer","useNavigate","TourCard","jsxDEV","_jsxDEV","HomePage","_s","locations","setLocations","tours","setTours","eventName","setEventName","eventFromLocationId","setEventFromLocationId","eventToLocationId","setEventToLocationId","tempEventName","setTempEventName","tempEventFromLocationId","setTempEventFromLocationId","tempEventToLocationId","setTempEventToLocationId","retrieveAllLocations","response","get","data","retrieveAllEvents","searchEvents","getAllEvents","allEvents","getSearchedEvents","getAllLocations","resLocation","searchEventByName","e","preventDefault","searchEventByCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","target","value","placeholder","onClick","required","map","location","tour","item","_c","$RefreshReg$"],"sources":["E:/1 Project TravelZen -G91/tours-and-travels-frontend-master/tours-and-travels-frontend-master/src/PageComponent/HomePage.jsx"],"sourcesContent":["// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import Carousel from \"./Carousel\";\n// // import Footer from \"../NavbarComponent/Footer\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import TourCard from \"../TourComponent/TourCard\";\n\n// // const HomePage = () => {\n// //   const navigate = useNavigate();\n// //   const [locations, setLocations] = useState([]);\n\n// //   const [eventName, setEventName] = useState(\"\");\n// //   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n// //   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n\n// //   const [tempEventName, setTempEventName] = useState(\"\");\n// //   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n// //   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n// //   const [tours, setTours] = useState([]);\n\n// //   const retrieveAllLocations = async () => {\n// //     const response = await axios.get(\n// //       \"http://localhost:8080/api/location/fetch/all\"\n// //     );\n// //     return response.data;\n// //   };\n\n// //   useEffect(() => {\n// //     const getAllEvents = async () => {\n// //       const allEvents = await retrieveAllEvents();\n// //       if (allEvents) {\n// //         setTours(allEvents.tours);\n// //       }\n// //     };\n\n// //     const getSearchedEvents = async () => {\n// //       const allEvents = await searchEvents();\n// //       if (allEvents) {\n// //         setTours(allEvents.tours);\n// //       }\n// //     };\n\n// //     const getAllLocations = async () => {\n// //       const resLocation = await retrieveAllLocations();\n// //       if (resLocation) {\n// //         setLocations(resLocation.locations);\n// //       }\n// //     };\n\n// //     if (\n// //       eventFromLocationId !== \"\" ||\n// //       eventToLocationId !== \"\" ||\n// //       eventName !== \"\"\n// //     ) {\n// //       getSearchedEvents();\n// //     } else {\n// //       getAllEvents();\n// //     }\n\n// //     getAllLocations();\n// //   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n// //   const retrieveAllEvents = async () => {\n// //     const response = await axios.get(\n// //       \"http://localhost:8080/api/tour/fetch/all/active\"\n// //     );\n// //     return response.data;\n// //   };\n\n// //   const searchEvents = async () => {\n// //     if (eventName !== \"\") {\n// //       const response = await axios.get(\n// //         \"http://localhost:8080/api/tour/fetch/name-wise?tourName=\" + eventName\n// //       );\n\n// //       return response.data;\n// //     } else if (\n// //       eventFromLocationId !== \"\" ||\n// //       eventFromLocationId !== \"0\" ||\n// //       eventToLocationId !== \"\" ||\n// //       eventToLocationId !== \"0\"\n// //     ) {\n// //       const response = await axios.get(\n// //         \"http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=\" +\n// //           eventFromLocationId +\n// //           \"&toLocationId=\" +\n// //           eventToLocationId\n// //       );\n// //       return response.data;\n// //     }\n// //   };\n\n// //   const searchEventByName = (e) => {\n// //     e.preventDefault();\n// //     setEventName(tempEventName);\n\n// //     setTempEventName(\"\");\n// //     setEventFromLocationId(\"\");\n// //     setEventToLocationId(\"\");\n// //   };\n\n// //   const searchEventByCategory = (e) => {\n// //     e.preventDefault();\n// //     setEventFromLocationId(tempEventFromLocationId);\n// //     setEventToLocationId(tempEventToLocationId);\n// //     setTempEventFromLocationId(\"\");\n// //     setTempEventToLocationId(\"\");\n// //     setEventName(\"\");\n// //   };\n\n// //   return (\n// //     <div className=\"container-fluid mb-2\">\n// //       <Carousel />\n// //       <h5 className=\"text-color-second text-center mt-3\">\n// //         Search Tours here..!!\n// //       </h5>\n\n// //       <div className=\"d-flex aligns-items-center justify-content-center\">\n// //         <div className=\"row\">\n// //           <div className=\"col-auto\">\n// //             <div className=\"mt-3\">\n// //               <form class=\"row g-3\">\n// //                 <div class=\"col-auto\">\n// //                   <input\n// //                     type=\"text\"\n// //                     className=\"form-control\"\n// //                     id=\"city\"\n// //                     name=\"eventName\"\n// //                     onChange={(e) => setTempEventName(e.target.value)}\n// //                     value={tempEventName}\n// //                     placeholder=\"Search Tour here...\"\n// //                   />\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <button\n// //                     type=\"submit\"\n// //                     class=\"btn bg-color custom-bg-text mb-3\"\n// //                     onClick={searchEventByName}\n// //                   >\n// //                     Search\n// //                   </button>\n// //                 </div>\n// //               </form>\n// //             </div>\n// //           </div>\n// //           <div className=\"col\">\n// //             <div className=\"mt-3\">\n// //               <form class=\"row g-3\">\n// //                 <div class=\"col-auto\">\n// //                   <select\n// //                     name=\"tempEventFromLocationId\"\n// //                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n// //                     className=\"form-control\"\n// //                     required\n// //                   >\n// //                     <option value=\"\">From Tour Location</option>\n\n// //                     {locations.map((location) => {\n// //                       return (\n// //                         <option value={location.id}> {location.name} </option>\n// //                       );\n// //                     })}\n// //                   </select>\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <select\n// //                     name=\"tempEventToLocationId\"\n// //                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n// //                     className=\"form-control\"\n// //                     required\n// //                   >\n// //                     <option value=\"\">To Tour Location</option>\n\n// //                     {locations.map((location) => {\n// //                       return (\n// //                         <option value={location.id}> {location.name} </option>\n// //                       );\n// //                     })}\n// //                   </select>\n// //                 </div>\n\n// //                 <div class=\"col-auto\">\n// //                   <button\n// //                     type=\"submit\"\n// //                     class=\"btn bg-color custom-bg-text mb-3\"\n// //                     onClick={searchEventByCategory}\n// //                   >\n// //                     Search\n// //                   </button>\n// //                 </div>\n// //               </form>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       <div className=\"col-md-12 mt-3 mb-5\">\n// //         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n// //           {tours.map((tour) => {\n// //             return <TourCard item={tour} key={tour.id} />;\n// //           })}\n// //         </div>\n// //       </div>\n// //       <hr />\n// //       <Footer />\n// //     </div>\n// //   );\n// // };\n\n// // export default HomePage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import TourCard from \"../TourComponent/TourCard\";\n// import \"./homePage.css\"; // Import the CSS file\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n//   const [tours, setTours] = useState([]);\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\"http://localhost:8080/api/location/fetch/all\");\n//     return response.data;\n//   };\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\"http://localhost:8080/api/tour/fetch/all/active\");\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`\n//       );\n//       return response.data;\n//     } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (eventFromLocationId !== \"\" || eventToLocationId !== \"\" || eventName !== \"\") {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"home-page\">\n//       <Carousel />\n\n//       <div className=\"search-section\">\n//         <h2 className=\"search-title\">Search Tours Here..!!</h2>\n//         <div className=\"search-container\">\n//           <form className=\"search-form\" onSubmit={searchEventByName}>\n//             <input\n//               type=\"text\"\n//               className=\"search-input\"\n//               placeholder=\"Search Tour by Name...\"\n//               value={tempEventName}\n//               onChange={(e) => setTempEventName(e.target.value)}\n//             />\n//             <button type=\"submit\" className=\"search-button\">\n//               Search\n//             </button>\n//           </form>\n\n//           <form className=\"search-form\" onSubmit={searchEventByCategory}>\n//             <select\n//               className=\"search-select\"\n//               value={tempEventFromLocationId}\n//               onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//             >\n//               <option value=\"\">From Location</option>\n//               {locations.map((location) => (\n//                 <option key={location.id} value={location.id}>\n//                   {location.name}\n//                 </option>\n//               ))}\n//             </select>\n\n//             <select\n//               className=\"search-select\"\n//               value={tempEventToLocationId}\n//               onChange={(e) => setTempEventToLocationId(e.target.value)}\n//             >\n//               <option value=\"\">To Location</option>\n//               {locations.map((location) => (\n//                 <option key={location.id} value={location.id}>\n//                   {location.name}\n//                 </option>\n//               ))}\n//             </select>\n\n//             <button type=\"submit\" className=\"search-button\">\n//               Search\n//             </button>\n//           </form>\n//         </div>\n//       </div>\n\n//       <div className=\"tours-section\">\n//         <h2 className=\"tours-title\">Featured Tours</h2>\n//         <div className=\"tours-grid\">\n//           {tours.map((tour) => (\n//             <TourCard key={tour.id} item={tour} />\n//           ))}\n//         </div>\n//       </div>\n\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import { useNavigate } from \"react-router-dom\";\n// import TourCard from \"../TourComponent/TourCard\";\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n//   const [tours, setTours] = useState([]);\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/location/fetch/all\"\n//     );\n//     return response.data;\n//   };\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/tour/fetch/all/active\"\n//     );\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`\n//       );\n//       return response.data;\n//     } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n//       const response = await axios.get(\n//         `http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (\n//       eventFromLocationId !== \"\" ||\n//       eventToLocationId !== \"\" ||\n//       eventName !== \"\"\n//     ) {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"container-fluid mb-2\">\n//       <Carousel />\n//       <h5 className=\"text-color-second text-center mt-3\">\n//         Search Tours here..!!\n//       </h5>\n\n//       <div className=\"d-flex aligns-items-center justify-content-center\">\n//         <div className=\"row\">\n//           <div className=\"col-auto\">\n//             <div className=\"mt-3\">\n//               <form className=\"row g-3\">\n//                 <div className=\"col-auto\">\n//                   <input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     id=\"city\"\n//                     name=\"eventName\"\n//                     onChange={(e) => setTempEventName(e.target.value)}\n//                     value={tempEventName}\n//                     placeholder=\"Search Tour here...\"\n//                   />\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByName}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//           <div className=\"col\">\n//             <div className=\"mt-3\">\n//               <form className=\"row g-3\">\n//                 <div className=\"col-auto\">\n//                   <select\n//                     name=\"tempEventFromLocationId\"\n//                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">From Tour Location</option>\n//                     {locations.map((location) => (\n//                       <option key={location.id} value={location.id}>\n//                         {location.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <select\n//                     name=\"tempEventToLocationId\"\n//                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">To Tour Location</option>\n//                     {locations.map((location) => (\n//                       <option key={location.id} value={location.id}>\n//                         {location.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div className=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByCategory}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"col-md-12 mt-3 mb-5\">\n//         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n//           {tours.map((tour) => (\n//             <TourCard key={tour.id} item={tour} />\n//           ))}\n//         </div>\n//       </div>\n//       <hr />\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Carousel from \"./Carousel\";\nimport Footer from \"../NavbarComponent/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport TourCard from \"../TourComponent/TourCard\";\n\nconst HomePage = () => {\n  const [locations, setLocations] = useState([]);\n  const [tours, setTours] = useState([]);\n  const [eventName, setEventName] = useState(\"\");\n  const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n  const [eventToLocationId, setEventToLocationId] = useState(\"\");\n  const [tempEventName, setTempEventName] = useState(\"\");\n  const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n  const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n  const retrieveAllLocations = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/location/fetch/all\"\n    );\n    return response.data;\n  };\n\n  const retrieveAllEvents = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/tour/fetch/all/active\"\n    );\n    return response.data;\n  };\n\n  const searchEvents = async () => {\n    if (eventName !== \"\") {\n      const response = await axios.get(\n        `http://localhost:8080/api/tour/fetch/name-wise?tourName=${eventName}`\n      );\n      return response.data;\n    } else if (eventFromLocationId !== \"\" || eventToLocationId !== \"\") {\n      const response = await axios.get(\n        `http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=${eventFromLocationId}&toLocationId=${eventToLocationId}`\n      );\n      return response.data;\n    }\n  };\n\n  useEffect(() => {\n    const getAllEvents = async () => {\n      const allEvents = await retrieveAllEvents();\n      if (allEvents) {\n        setTours(allEvents.tours);\n      }\n    };\n\n    const getSearchedEvents = async () => {\n      const allEvents = await searchEvents();\n      if (allEvents) {\n        setTours(allEvents.tours);\n      }\n    };\n\n    const getAllLocations = async () => {\n      const resLocation = await retrieveAllLocations();\n      if (resLocation) {\n        setLocations(resLocation.locations);\n      }\n    };\n\n    if (\n      eventFromLocationId !== \"\" ||\n      eventToLocationId !== \"\" ||\n      eventName !== \"\"\n    ) {\n      getSearchedEvents();\n    } else {\n      getAllEvents();\n    }\n\n    getAllLocations();\n  }, [eventFromLocationId, eventToLocationId, eventName, searchEvents]); // Added searchEvents to dependencies\n\n  const searchEventByName = (e) => {\n    e.preventDefault();\n    setEventName(tempEventName);\n    setTempEventName(\"\");\n    setEventFromLocationId(\"\");\n    setEventToLocationId(\"\");\n  };\n\n  const searchEventByCategory = (e) => {\n    e.preventDefault();\n    setEventFromLocationId(tempEventFromLocationId);\n    setEventToLocationId(tempEventToLocationId);\n    setTempEventFromLocationId(\"\");\n    setTempEventToLocationId(\"\");\n    setEventName(\"\");\n  };\n\n  return (\n    <div className=\"container-fluid mb-2\">\n      <Carousel />\n      <h5 className=\"text-color-second text-center mt-3\">\n        Search Tours here..!!\n      </h5>\n\n      <div className=\"d-flex aligns-items-center justify-content-center\">\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <div className=\"mt-3\">\n              <form className=\"row g-3\">\n                <div className=\"col-auto\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"city\"\n                    name=\"eventName\"\n                    onChange={(e) => setTempEventName(e.target.value)}\n                    value={tempEventName}\n                    placeholder=\"Search Tour here...\"\n                  />\n                </div>\n\n                <div className=\"col-auto\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn bg-color custom-bg-text mb-3\"\n                    onClick={searchEventByName}\n                  >\n                    Search\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"mt-3\">\n              <form className=\"row g-3\">\n                <div className=\"col-auto\">\n                  <select\n                    name=\"tempEventFromLocationId\"\n                    onChange={(e) => setTempEventFromLocationId(e.target.value)}\n                    className=\"form-control\"\n                    required\n                  >\n                    <option value=\"\">From Tour Location</option>\n                    {locations.map((location) => (\n                      <option key={location.id} value={location.id}>\n                        {location.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"col-auto\">\n                  <select\n                    name=\"tempEventToLocationId\"\n                    onChange={(e) => setTempEventToLocationId(e.target.value)}\n                    className=\"form-control\"\n                    required\n                  >\n                    <option value=\"\">To Tour Location</option>\n                    {locations.map((location) => (\n                      <option key={location.id} value={location.id}>\n                        {location.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"col-auto\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn bg-color custom-bg-text mb-3\"\n                    onClick={searchEventByCategory}\n                  >\n                    Search\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-12 mt-3 mb-5\">\n        <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n          {tours.map((tour) => (\n            <TourCard key={tour.id} item={tour} />\n          ))}\n        </div>\n      </div>\n      <hr />\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}