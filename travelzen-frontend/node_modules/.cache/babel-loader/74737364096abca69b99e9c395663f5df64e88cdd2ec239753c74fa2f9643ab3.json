{"ast":null,"code":"var _jsxFileName = \"E:\\\\1 Project TravelZen -G91\\\\travelzen-frontend\\\\travelzen-frontend\\\\src\\\\UserComponent\\\\UserLoginForm.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import \"./userLoginForm.css\";\n\n// const UserLoginForm = () => {\n//   let navigate = useNavigate();\n\n//   const [loginRequest, setLoginRequest] = useState({\n//     emailId: \"\",\n//     password: \"\",\n//     role: \"\",\n//   });\n\n//   const handleUserInput = (e) => {\n//     setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\n//   };\n\n//   const loginAction = (e) => {\n//     fetch(\"http://localhost:8080/api/user/login\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(loginRequest),\n//     })\n//       .then((result) => {\n//         console.log(\"result\", result);\n//         result.json().then((res) => {\n//           if (res.success) {\n//             console.log(\"Got the success response\");\n\n//             if (res.jwtToken !== null) {\n//               if (res.user.role === \"Admin\") {\n//                 sessionStorage.setItem(\n//                   \"active-admin\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"admin-jwtToken\", res.jwtToken);\n//               } else if (res.user.role === \"Customer\") {\n//                 sessionStorage.setItem(\n//                   \"active-customer\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"customer-jwtToken\", res.jwtToken);\n//               } else if (res.user.role === \"Tour Guide\") {\n//                 sessionStorage.setItem(\n//                   \"active-guide\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"guide-jwtToken\", res.jwtToken);\n//               }\n//             }\n\n//             if (res.jwtToken !== null) {\n//               toast.success(res.responseMessage, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//               });\n//               setTimeout(() => {\n//                 window.location.href = \"/home\";\n//               }, 1000); // Redirect after 1 second\n//             } else {\n//               toast.error(res.responseMessage, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//               });\n//             }\n//           } else {\n//             toast.error(res.responseMessage, {\n//               position: \"top-center\",\n//               autoClose: 1000,\n//               hideProgressBar: false,\n//               closeOnClick: true,\n//               pauseOnHover: true,\n//               draggable: true,\n//               progress: undefined,\n//             });\n//           }\n//         });\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         toast.error(\"It seems server is down\", {\n//           position: \"top-center\",\n//           autoClose: 1000,\n//           hideProgressBar: false,\n//           closeOnClick: true,\n//           pauseOnHover: true,\n//           draggable: true,\n//           progress: undefined,\n//         });\n//       });\n//     e.preventDefault();\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\n//         <div className=\"form-card border-color\" style={{ width: \"25rem\" }}>\n//           <div className=\"container-fluid\">\n//             <div\n//               className=\"card-header bg-color custom-bg-text mt-2 d-flex justify-content-center align-items-center\"\n//               style={{\n//                 borderRadius: \"1em\",\n//                 height: \"38px\",\n//               }}\n//             >\n//               <h4 className=\"card-title\">User Login</h4>\n//             </div>\n//             <div className=\"card-body mt-3\">\n//               <form>\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"role\" className=\"form-label\">\n//                     <b>User Role</b>\n//                   </label>\n//                   <select\n//                     onChange={handleUserInput}\n//                     className=\"form-control\"\n//                     name=\"role\"\n//                   >\n//                     <option value=\"0\">Select Role</option>\n//                     <option value=\"Admin\"> Admin </option>\n//                     <option value=\"Tour Guide\"> Tour Guide </option>\n//                     <option value=\"Customer\"> Customer </option>\n//                   </select>\n//                 </div>\n\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"emailId\" className=\"form-label\">\n//                     <b>Email Id</b>\n//                   </label>\n//                   <input\n//                     type=\"email\"\n//                     className=\"form-control\"\n//                     id=\"emailId\"\n//                     name=\"emailId\"\n//                     onChange={handleUserInput}\n//                     value={loginRequest.emailId}\n//                   />\n//                 </div>\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"password\" className=\"form-label\">\n//                     <b>Password</b>\n//                   </label>\n//                   <input\n//                     type=\"password\"\n//                     className=\"form-control\"\n//                     id=\"password\"\n//                     name=\"password\"\n//                     onChange={handleUserInput}\n//                     value={loginRequest.password}\n//                     autoComplete=\"on\"\n//                   />\n//                 </div>\n//                 <div className=\"d-flex aligns-items-center justify-content-center mb-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text\"\n//                     onClick={loginAction}\n//                   >\n//                     Login\n//                   </button>\n//                 </div>\n\n//                 {/* Forgot Password Link */}\n//                 <div className=\"text-center mt-3\">\n//                   <Link to=\"/user/forgot-password\" className=\"text-color-second\">\n//                     Forgot Password?\n//                   </Link>\n//                 </div>\n\n//                 <ToastContainer />\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserLoginForm;\n\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./userLoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserLoginForm = () => {\n  _s();\n  let navigate = useNavigate();\n  const [loginRequest, setLoginRequest] = useState({\n    emailId: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const handleUserInput = e => {\n    setLoginRequest({\n      ...loginRequest,\n      [e.target.name]: e.target.value\n    });\n  };\n  const loginAction = e => {\n    fetch(\"http://localhost:8080/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginRequest)\n    }).then(result => {\n      console.log(\"result\", result);\n      result.json().then(res => {\n        if (res.success) {\n          console.log(\"Got the success response\");\n          if (res.jwtToken !== null) {\n            if (res.user.role === \"Admin\") {\n              sessionStorage.setItem(\"active-admin\", JSON.stringify(res.user));\n              sessionStorage.setItem(\"admin-jwtToken\", res.jwtToken);\n            } else if (res.user.role === \"Customer\") {\n              sessionStorage.setItem(\"active-customer\", JSON.stringify(res.user));\n              sessionStorage.setItem(\"customer-jwtToken\", res.jwtToken);\n            } else if (res.user.role === \"Tour Guide\") {\n              sessionStorage.setItem(\"active-guide\", JSON.stringify(res.user));\n              sessionStorage.setItem(\"guide-jwtToken\", res.jwtToken);\n            }\n          }\n          if (res.jwtToken !== null) {\n            toast.success(res.responseMessage, {\n              position: \"top-center\",\n              autoClose: 1000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n            setTimeout(() => {\n              window.location.href = \"/home\";\n            }, 1000); // Redirect after 1 second\n          } else {\n            toast.error(res.responseMessage, {\n              position: \"top-center\",\n              autoClose: 1000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n          }\n        } else {\n          toast.error(res.responseMessage, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      });\n    }).catch(error => {\n      console.error(error);\n      toast.error(\"It seems server is down\", {\n        position: \"top-center\",\n        autoClose: 1000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    });\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              children: \"User Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleUserInput,\n              className: \"form-control\",\n              name: \"role\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Tour Guide\",\n                children: \"Tour Guide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Customer\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"emailId\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"emailId\",\n              name: \"emailId\",\n              onChange: handleUserInput,\n              value: loginRequest.emailId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              name: \"password\",\n              onChange: handleUserInput,\n              value: loginRequest.password,\n              autoComplete: \"on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              onClick: loginAction,\n              children: \"SIGN IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user/forgot-password\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(UserLoginForm, \"IXf/GTdLY/yEV7B0ylFObJgt76Q=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLoginForm;\nexport default UserLoginForm;\nvar _c;\n$RefreshReg$(_c, \"UserLoginForm\");","map":{"version":3,"names":["useState","ToastContainer","toast","useNavigate","Link","jsxDEV","_jsxDEV","UserLoginForm","_s","navigate","loginRequest","setLoginRequest","emailId","password","role","handleUserInput","e","target","name","value","loginAction","fetch","method","headers","Accept","body","JSON","stringify","then","result","console","log","json","res","success","jwtToken","user","sessionStorage","setItem","responseMessage","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setTimeout","window","location","href","error","catch","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","type","id","autoComplete","onClick","to","_c","$RefreshReg$"],"sources":["E:/1 Project TravelZen -G91/travelzen-frontend/travelzen-frontend/src/UserComponent/UserLoginForm.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import \"./userLoginForm.css\";\n\n// const UserLoginForm = () => {\n//   let navigate = useNavigate();\n\n//   const [loginRequest, setLoginRequest] = useState({\n//     emailId: \"\",\n//     password: \"\",\n//     role: \"\",\n//   });\n\n//   const handleUserInput = (e) => {\n//     setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\n//   };\n\n//   const loginAction = (e) => {\n//     fetch(\"http://localhost:8080/api/user/login\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(loginRequest),\n//     })\n//       .then((result) => {\n//         console.log(\"result\", result);\n//         result.json().then((res) => {\n//           if (res.success) {\n//             console.log(\"Got the success response\");\n\n//             if (res.jwtToken !== null) {\n//               if (res.user.role === \"Admin\") {\n//                 sessionStorage.setItem(\n//                   \"active-admin\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"admin-jwtToken\", res.jwtToken);\n//               } else if (res.user.role === \"Customer\") {\n//                 sessionStorage.setItem(\n//                   \"active-customer\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"customer-jwtToken\", res.jwtToken);\n//               } else if (res.user.role === \"Tour Guide\") {\n//                 sessionStorage.setItem(\n//                   \"active-guide\",\n//                   JSON.stringify(res.user)\n//                 );\n//                 sessionStorage.setItem(\"guide-jwtToken\", res.jwtToken);\n//               }\n//             }\n\n//             if (res.jwtToken !== null) {\n//               toast.success(res.responseMessage, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//               });\n//               setTimeout(() => {\n//                 window.location.href = \"/home\";\n//               }, 1000); // Redirect after 1 second\n//             } else {\n//               toast.error(res.responseMessage, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//               });\n//             }\n//           } else {\n//             toast.error(res.responseMessage, {\n//               position: \"top-center\",\n//               autoClose: 1000,\n//               hideProgressBar: false,\n//               closeOnClick: true,\n//               pauseOnHover: true,\n//               draggable: true,\n//               progress: undefined,\n//             });\n//           }\n//         });\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         toast.error(\"It seems server is down\", {\n//           position: \"top-center\",\n//           autoClose: 1000,\n//           hideProgressBar: false,\n//           closeOnClick: true,\n//           pauseOnHover: true,\n//           draggable: true,\n//           progress: undefined,\n//         });\n//       });\n//     e.preventDefault();\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\n//         <div className=\"form-card border-color\" style={{ width: \"25rem\" }}>\n//           <div className=\"container-fluid\">\n//             <div\n//               className=\"card-header bg-color custom-bg-text mt-2 d-flex justify-content-center align-items-center\"\n//               style={{\n//                 borderRadius: \"1em\",\n//                 height: \"38px\",\n//               }}\n//             >\n//               <h4 className=\"card-title\">User Login</h4>\n//             </div>\n//             <div className=\"card-body mt-3\">\n//               <form>\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"role\" className=\"form-label\">\n//                     <b>User Role</b>\n//                   </label>\n//                   <select\n//                     onChange={handleUserInput}\n//                     className=\"form-control\"\n//                     name=\"role\"\n//                   >\n//                     <option value=\"0\">Select Role</option>\n//                     <option value=\"Admin\"> Admin </option>\n//                     <option value=\"Tour Guide\"> Tour Guide </option>\n//                     <option value=\"Customer\"> Customer </option>\n//                   </select>\n//                 </div>\n\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"emailId\" className=\"form-label\">\n//                     <b>Email Id</b>\n//                   </label>\n//                   <input\n//                     type=\"email\"\n//                     className=\"form-control\"\n//                     id=\"emailId\"\n//                     name=\"emailId\"\n//                     onChange={handleUserInput}\n//                     value={loginRequest.emailId}\n//                   />\n//                 </div>\n//                 <div className=\"mb-3 text-color\">\n//                   <label htmlFor=\"password\" className=\"form-label\">\n//                     <b>Password</b>\n//                   </label>\n//                   <input\n//                     type=\"password\"\n//                     className=\"form-control\"\n//                     id=\"password\"\n//                     name=\"password\"\n//                     onChange={handleUserInput}\n//                     value={loginRequest.password}\n//                     autoComplete=\"on\"\n//                   />\n//                 </div>\n//                 <div className=\"d-flex aligns-items-center justify-content-center mb-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"btn bg-color custom-bg-text\"\n//                     onClick={loginAction}\n//                   >\n//                     Login\n//                   </button>\n//                 </div>\n\n//                 {/* Forgot Password Link */}\n//                 <div className=\"text-center mt-3\">\n//                   <Link to=\"/user/forgot-password\" className=\"text-color-second\">\n//                     Forgot Password?\n//                   </Link>\n//                 </div>\n\n//                 <ToastContainer />\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserLoginForm;\n\n\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./userLoginForm.css\";\n\nconst UserLoginForm = () => {\n  let navigate = useNavigate();\n\n  const [loginRequest, setLoginRequest] = useState({\n    emailId: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n  const handleUserInput = (e) => {\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\n  };\n\n  const loginAction = (e) => {\n    fetch(\"http://localhost:8080/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(loginRequest),\n    })\n      .then((result) => {\n        console.log(\"result\", result);\n        result.json().then((res) => {\n          if (res.success) {\n            console.log(\"Got the success response\");\n\n            if (res.jwtToken !== null) {\n              if (res.user.role === \"Admin\") {\n                sessionStorage.setItem(\n                  \"active-admin\",\n                  JSON.stringify(res.user)\n                );\n                sessionStorage.setItem(\"admin-jwtToken\", res.jwtToken);\n              } else if (res.user.role === \"Customer\") {\n                sessionStorage.setItem(\n                  \"active-customer\",\n                  JSON.stringify(res.user)\n                );\n                sessionStorage.setItem(\"customer-jwtToken\", res.jwtToken);\n              } else if (res.user.role === \"Tour Guide\") {\n                sessionStorage.setItem(\n                  \"active-guide\",\n                  JSON.stringify(res.user)\n                );\n                sessionStorage.setItem(\"guide-jwtToken\", res.jwtToken);\n              }\n            }\n\n            if (res.jwtToken !== null) {\n              toast.success(res.responseMessage, {\n                position: \"top-center\",\n                autoClose: 1000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n              setTimeout(() => {\n                window.location.href = \"/home\";\n              }, 1000); // Redirect after 1 second\n            } else {\n              toast.error(res.responseMessage, {\n                position: \"top-center\",\n                autoClose: 1000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n            }\n          } else {\n            toast.error(res.responseMessage, {\n              position: \"top-center\",\n              autoClose: 1000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        toast.error(\"It seems server is down\", {\n          position: \"top-center\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      });\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <div className=\"login-header\">\n          <h2>Welcome Page</h2>\n          <h3>Sign In</h3>\n        </div>\n        <div className=\"login-body\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"role\">User Role</label>\n              <select\n                onChange={handleUserInput}\n                className=\"form-control\"\n                name=\"role\"\n              >\n                <option value=\"0\">Select Role</option>\n                <option value=\"Admin\">Admin</option>\n                <option value=\"Tour Guide\">Tour Guide</option>\n                <option value=\"Customer\">Customer</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"emailId\">Email Id</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"emailId\"\n                name=\"emailId\"\n                onChange={handleUserInput}\n                value={loginRequest.emailId}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                onChange={handleUserInput}\n                value={loginRequest.password}\n                autoComplete=\"on\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                className=\"login-button\"\n                onClick={loginAction}\n              >\n                SIGN IN\n              </button>\n            </div>\n\n            <div className=\"forgot-password\">\n              <Link to=\"/user/forgot-password\">Forgot Password?</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default UserLoginForm;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}