{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import { useNavigate } from \"react-router-dom\";\n// import TourCard from \"../TourComponent/TourCard\";\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const [tours, setTours] = useState([]);\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/location/fetch/all\"\n//     );\n//     return response.data;\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (\n//       eventFromLocationId !== \"\" ||\n//       eventToLocationId !== \"\" ||\n//       eventName !== \"\"\n//     ) {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/tour/fetch/all/active\"\n//     );\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         \"http://localhost:8080/api/tour/fetch/name-wise?tourName=\" + eventName\n//       );\n\n//       return response.data;\n//     } else if (\n//       eventFromLocationId !== \"\" ||\n//       eventFromLocationId !== \"0\" ||\n//       eventToLocationId !== \"\" ||\n//       eventToLocationId !== \"0\"\n//     ) {\n//       const response = await axios.get(\n//         \"http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=\" +\n//           eventFromLocationId +\n//           \"&toLocationId=\" +\n//           eventToLocationId\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"container-fluid mb-2\">\n//       <Carousel />\n//       <h5 className=\"text-color-second text-center mt-3\">\n//         Search Tours here..!!\n//       </h5>\n\n//       <div className=\"d-flex aligns-items-center justify-content-center\">\n//         <div className=\"row\">\n//           <div className=\"col-auto\">\n//             <div className=\"mt-3\">\n//               <form class=\"row g-3\">\n//                 <div class=\"col-auto\">\n//                   <input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     id=\"city\"\n//                     name=\"eventName\"\n//                     onChange={(e) => setTempEventName(e.target.value)}\n//                     value={tempEventName}\n//                     placeholder=\"Search Tour here...\"\n//                   />\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByName}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//           <div className=\"col\">\n//             <div className=\"mt-3\">\n//               <form class=\"row g-3\">\n//                 <div class=\"col-auto\">\n//                   <select\n//                     name=\"tempEventFromLocationId\"\n//                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">From Tour Location</option>\n\n//                     {locations.map((location) => {\n//                       return (\n//                         <option value={location.id}> {location.name} </option>\n//                       );\n//                     })}\n//                   </select>\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <select\n//                     name=\"tempEventToLocationId\"\n//                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">To Tour Location</option>\n\n//                     {locations.map((location) => {\n//                       return (\n//                         <option value={location.id}> {location.name} </option>\n//                       );\n//                     })}\n//                   </select>\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByCategory}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"col-md-12 mt-3 mb-5\">\n//         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n//           {tours.map((tour) => {\n//             return <TourCard item={tour} key={tour.id} />;\n//           })}\n//         </div>\n//       </div>\n//       <hr />\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["E:/1 Project TravelZen -G91/tours-and-travels-frontend-master/tours-and-travels-frontend-master/src/PageComponent/HomePage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Carousel from \"./Carousel\";\n// import Footer from \"../NavbarComponent/Footer\";\n// import { useNavigate } from \"react-router-dom\";\n// import TourCard from \"../TourComponent/TourCard\";\n\n// const HomePage = () => {\n//   const navigate = useNavigate();\n//   const [locations, setLocations] = useState([]);\n\n//   const [eventName, setEventName] = useState(\"\");\n//   const [eventFromLocationId, setEventFromLocationId] = useState(\"\");\n//   const [eventToLocationId, setEventToLocationId] = useState(\"\");\n\n//   const [tempEventName, setTempEventName] = useState(\"\");\n//   const [tempEventFromLocationId, setTempEventFromLocationId] = useState(\"\");\n//   const [tempEventToLocationId, setTempEventToLocationId] = useState(\"\");\n\n//   const [tours, setTours] = useState([]);\n\n//   const retrieveAllLocations = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/location/fetch/all\"\n//     );\n//     return response.data;\n//   };\n\n//   useEffect(() => {\n//     const getAllEvents = async () => {\n//       const allEvents = await retrieveAllEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getSearchedEvents = async () => {\n//       const allEvents = await searchEvents();\n//       if (allEvents) {\n//         setTours(allEvents.tours);\n//       }\n//     };\n\n//     const getAllLocations = async () => {\n//       const resLocation = await retrieveAllLocations();\n//       if (resLocation) {\n//         setLocations(resLocation.locations);\n//       }\n//     };\n\n//     if (\n//       eventFromLocationId !== \"\" ||\n//       eventToLocationId !== \"\" ||\n//       eventName !== \"\"\n//     ) {\n//       getSearchedEvents();\n//     } else {\n//       getAllEvents();\n//     }\n\n//     getAllLocations();\n//   }, [eventFromLocationId, eventToLocationId, eventName]);\n\n//   const retrieveAllEvents = async () => {\n//     const response = await axios.get(\n//       \"http://localhost:8080/api/tour/fetch/all/active\"\n//     );\n//     return response.data;\n//   };\n\n//   const searchEvents = async () => {\n//     if (eventName !== \"\") {\n//       const response = await axios.get(\n//         \"http://localhost:8080/api/tour/fetch/name-wise?tourName=\" + eventName\n//       );\n\n//       return response.data;\n//     } else if (\n//       eventFromLocationId !== \"\" ||\n//       eventFromLocationId !== \"0\" ||\n//       eventToLocationId !== \"\" ||\n//       eventToLocationId !== \"0\"\n//     ) {\n//       const response = await axios.get(\n//         \"http://localhost:8080/api/tour/fetch/location-wise?fromLocationId=\" +\n//           eventFromLocationId +\n//           \"&toLocationId=\" +\n//           eventToLocationId\n//       );\n//       return response.data;\n//     }\n//   };\n\n//   const searchEventByName = (e) => {\n//     e.preventDefault();\n//     setEventName(tempEventName);\n\n//     setTempEventName(\"\");\n//     setEventFromLocationId(\"\");\n//     setEventToLocationId(\"\");\n//   };\n\n//   const searchEventByCategory = (e) => {\n//     e.preventDefault();\n//     setEventFromLocationId(tempEventFromLocationId);\n//     setEventToLocationId(tempEventToLocationId);\n//     setTempEventFromLocationId(\"\");\n//     setTempEventToLocationId(\"\");\n//     setEventName(\"\");\n//   };\n\n//   return (\n//     <div className=\"container-fluid mb-2\">\n//       <Carousel />\n//       <h5 className=\"text-color-second text-center mt-3\">\n//         Search Tours here..!!\n//       </h5>\n\n//       <div className=\"d-flex aligns-items-center justify-content-center\">\n//         <div className=\"row\">\n//           <div className=\"col-auto\">\n//             <div className=\"mt-3\">\n//               <form class=\"row g-3\">\n//                 <div class=\"col-auto\">\n//                   <input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     id=\"city\"\n//                     name=\"eventName\"\n//                     onChange={(e) => setTempEventName(e.target.value)}\n//                     value={tempEventName}\n//                     placeholder=\"Search Tour here...\"\n//                   />\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByName}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//           <div className=\"col\">\n//             <div className=\"mt-3\">\n//               <form class=\"row g-3\">\n//                 <div class=\"col-auto\">\n//                   <select\n//                     name=\"tempEventFromLocationId\"\n//                     onChange={(e) => setTempEventFromLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">From Tour Location</option>\n\n//                     {locations.map((location) => {\n//                       return (\n//                         <option value={location.id}> {location.name} </option>\n//                       );\n//                     })}\n//                   </select>\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <select\n//                     name=\"tempEventToLocationId\"\n//                     onChange={(e) => setTempEventToLocationId(e.target.value)}\n//                     className=\"form-control\"\n//                     required\n//                   >\n//                     <option value=\"\">To Tour Location</option>\n\n//                     {locations.map((location) => {\n//                       return (\n//                         <option value={location.id}> {location.name} </option>\n//                       );\n//                     })}\n//                   </select>\n//                 </div>\n\n//                 <div class=\"col-auto\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"btn bg-color custom-bg-text mb-3\"\n//                     onClick={searchEventByCategory}\n//                   >\n//                     Search\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"col-md-12 mt-3 mb-5\">\n//         <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n//           {tours.map((tour) => {\n//             return <TourCard item={tour} key={tour.id} />;\n//           })}\n//         </div>\n//       </div>\n//       <hr />\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}